@page "/issues/by/{personRole}"
@inject IIssueManager IssueManager
@inject IPersonManager PersonManager
@rendermode InteractiveServer


<h3>Issues by @personRole</h3>
<div class="col-6">
    <PersonSelect Persons="@persons" SelectedPersonId="@SelectedPersonId" SelectedPersonIdChanged="OnPersonSelected" />
</div>


@if (issues.Any())
{
    <IssueTable Issues="@issues" />
}
else
{
    <p>No issues found</p>
}

@code {
    [Parameter]
    public string personRole { get; set; } = "";

    public uint SelectedPersonId { get; set; }

    private IList<IssueDTO> issues = new List<IssueDTO>();
    private IList<PersonDTO> persons = new List<PersonDTO>();

    protected override async Task OnInitializedAsync()
    {
        persons = await PersonManager.GetAll();
        Console.WriteLine("test při načtení stránky");

    }

    private async Task OnPersonSelected(uint id)
    {
        Console.WriteLine("zavolán ONPERSONCHANGED");
        Console.WriteLine($"Zvoleno ID: {id}");
        SelectedPersonId = id;
        issues = personRole switch
        {
            "assignee" => await IssueManager.GetAllIssuesByAssignee(SelectedPersonId),
            "requester" => await IssueManager.GetAllIssuesByRequester(SelectedPersonId),
            _ => []
        };

    }


}
