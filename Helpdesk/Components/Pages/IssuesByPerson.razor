@page "/issues/by/{personRole}"
@inject IIssueManager IssueManager
@inject IPersonManager PersonManager
@rendermode InteractiveServer


<h3>Issues by @personRole</h3>
<p>Id: @SelectedPersonId</p>
<select class="form-select w-25 mb-3" @onchange="OnPersonChanged">
    <option value="">-- Vyber osobu --</option>
    @foreach (var p in persons)
    {
        <option value="@p.Id">
            @(p.PersonType == PersonType.PhysicalPerson
                    ? $"{p.FirstName} {p.LastName}"
                    : p.CompanyName)
         </option>
        }
</select>

@if (issues.Any())
{
    <IssueTable Issues="@issues" />
}

@code {
    [Parameter]
    public string personRole { get; set; } = "";

    public uint SelectedPersonId { get; set; }

    private IList<IssueDTO> issues = new List<IssueDTO>();
    private IList<PersonDTO> persons = new List<PersonDTO>();

    protected override async Task OnInitializedAsync ()
    {
        persons = await PersonManager.GetAll();
        Console.WriteLine("test při načtení stránky");

    }

    private async Task OnPersonChanged(ChangeEventArgs e)
    {
        Console.WriteLine("zavolán ONPERSONCHANGED");
        if (uint.TryParse(e.Value?.ToString(), out var id))
        {
            Console.WriteLine($"Zvoleno ID: {id}");
            SelectedPersonId = id;
            issues = personRole switch
            {
                "assignee" => await IssueManager.GetAllIssuesByAssignee(SelectedPersonId),
                "requester" => await IssueManager.GetAllIssuesByRequester(SelectedPersonId),
                _ => []
            };
            
        }
        else
            Console.WriteLine("Nepodařilo se naparsovat id na uint");
    }


}
