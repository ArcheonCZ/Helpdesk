@inject IChatManager ChatManager
@rendermode InteractiveServer


<h4>Chat</h4>

@if (messages.Count == 0)
{
    <p>No messages</p>
}
else
{
    <ul class="list-group">
        @foreach (var msg in messages)
        {
            <li class="list-group-item">
                <b>@(msg.Sender.CompanyName ?? msg.Sender.FirstName +" "+ msg.Sender.LastName):</b> @msg.Message
            </li>
        }
    </ul>
}
<div class="my-3">
<PersonSelect Persons="@Persons" SelectedPersonId="@SelectedPersonId" SelectedPersonIdChanged="OnPersonSelected" />
</div>
<textarea @bind="newMessage.Message" placeholder="Write a message..." rows="3" class="form-control"></textarea>
<button class="btn btn-primary mt-2" @onclick="SendMessage">
    Send
</button>

@code {
    [Parameter]
    public IList<PersonDTO> Persons { get; set; } = new List<PersonDTO>();
    [Parameter]
    public uint IssueId { get; set; }
    private uint SelectedPersonId { get; set; }
    private ChatMessageDTO newMessage = new();
    // private string newMessage = string.Empty;

    private IList<ChatMessageDTO> messages = new List<ChatMessageDTO>();

    protected override async Task OnInitializedAsync()
    {
        if (Persons.Count > 0 && IssueId > 0)
        {
       await LoadMessages();
        }
    }

    private void OnPersonSelected(uint selectedId)
    {
        SelectedPersonId = selectedId;
        newMessage.SenderId = selectedId;
        newMessage.IssueId = IssueId;
    }
    private async Task SendMessage()
    {
        await ChatManager.Insert(newMessage);
        newMessage = new ChatMessageDTO { IssueId = IssueId }; // reset formuláře
        await LoadMessages();
    }
    private async Task LoadMessages()
    {
        messages = await ChatManager.GetMessagesByIssue(IssueId);
       // StateHasChanged(); // aktualizace UI (v případě potřeby)
    }
}
