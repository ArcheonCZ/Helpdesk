@page "/"
@page "/issues"
@page "/issues/filter/{filter}"
@attribute [StreamRendering]
@inject IIssueManager IssueManager

<PageTitle>Issues</PageTitle>

<h1>Issues</h1>

@if (issues == null)
{
    <p><em>Loading...</em></p>
}
else
{
 <IssueTable Issues="@issues"/>
}

@code {
    [Parameter]
    public string filter { get; set; } = "";
    private IList<IssueDTO> issues = new List<IssueDTO>();

    protected override async Task OnParametersSetAsync()
    {
        issues = filter switch
        {
            "overdue" => await IssueManager.GetAllOverdue(),
            "overduesub" => await IssueManager.GetAllWithOverdueSubIssue(),
            "unresolved" => await IssueManager.GetAllUnresolved(),
            _ => await IssueManager.GetAll()
        };
    }
}
